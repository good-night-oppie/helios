name: Claude Code

on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  issues:
    types: [opened, assigned]
  pull_request_review:
    types: [submitted]

jobs:
  claude:
    if: |
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review' && contains(github.event.review.body, '@claude')) ||
      (github.event_name == 'issues' && (contains(github.event.issue.body, '@claude') || contains(github.event.issue.title, '@claude')))
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      issues: read
      id-token: write
      actions: read # Required for Claude to read CI results on PRs
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Run Claude Code
        id: claude
        uses: anthropics/claude-code-action@beta
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}

          # This is an optional setting that allows Claude to read CI results on PRs
          additional_permissions: |
            actions: read
          
          # Use Claude 3.5 Sonnet as the default model (more reliable than Opus)
          # Note: Using older version due to thinking mode compatibility issue
          model: "claude-3-5-sonnet-20240620"
          
          # Optional: Customize the trigger phrase (default: @claude)
          # trigger_phrase: "/claude"
          
          # Optional: Trigger when specific user is assigned to an issue
          # assignee_trigger: "claude-bot"
          
          # Optional: Allow Claude to run specific commands
          # allowed_tools: "Bash(npm install),Bash(npm run build),Bash(npm run test:*),Bash(npm run lint:*)"
          
          # Optional: Add custom instructions for Claude to customize its behavior for your project
          custom_instructions: |
            You are working on the Oppie Thunder project - a clean room implementation following TDD principles.
            
            Key guidelines:
            - Follow the existing clean room constraints (no reference to blue_team directory)
            - Maintain high test coverage (≥85% for core packages, 100% for critical components)
            - Use proper TDD workflow: Research → Red → Green → Refactor → Validate
            - Focus on code quality, security, and performance in reviews
            - Reference task IDs in commits when applicable
          
          # Optional: Custom environment variables for Claude
          # claude_env: |
          #   NODE_ENV: test

      # Enhanced error handling for Claude failures
      - name: Handle Claude Failure
        if: failure() && steps.claude.conclusion == 'failure'
        shell: bash
        run: |
          echo "::error::Claude Code action failed"
          echo "::notice::This may be due to API rate limits, authentication issues, or model configuration problems"
          
          # Check for specific error types
          if [[ "${{ steps.claude.outputs.error }}" == *"model"* ]]; then
            echo "::error::Model configuration error detected"
            echo "::notice::Please verify the model parameter is set to a valid Claude model"
          elif [[ "${{ steps.claude.outputs.error }}" == *"401"* || "${{ steps.claude.outputs.error }}" == *"403"* ]]; then
            echo "::error::Authentication error - please check CLAUDE_CODE_OAUTH_TOKEN secret"
          elif [[ "${{ steps.claude.outputs.error }}" == *"429"* ]]; then
            echo "::error::Rate limit exceeded - Claude may retry automatically"
          fi
          
          echo "::group::Debug Information"
          echo "Error output: ${{ steps.claude.outputs.error }}"
          echo "Step conclusion: ${{ steps.claude.conclusion }}"
          echo "Event type: ${{ github.event_name }}"
          echo "::endgroup::"