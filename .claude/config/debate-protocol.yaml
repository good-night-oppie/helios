# Debate Protocol Configuration for PR Reviews
# Used by /otw/research-tdd-pr-review workflow

debate_config:
  # Complexity thresholds determine number of debate rounds
  complexity_thresholds:
    critical: 9     # 3-4 rounds, multiple specialized agents
    high: 7         # 2-3 rounds, domain-specific agent
    medium: 5       # 1-2 rounds, standard review
    low: 3          # 1 round, quick review
  
  # Trigger debate if percentage of changes questioned exceeds threshold
  question_threshold: 0.25  # 25% of changes
  
  # Automatic escalation rules
  auto_escalation:
    no_consensus_after: 3         # Escalate after 3 rounds without consensus
    critical_disagreement: true   # Escalate immediately on security/data loss issues
    performance_regression: true   # Escalate if performance degrades >20%
    architecture_deviation: true   # Escalate if deviates from approved architecture
  
  # Specialized agents for different review domains
  specialized_agents:
    algorithm:
      agent: alphazero-muzero-planner
      prompt_template: review-algorithm.md
      trigger_keywords: ["mcts", "search", "optimization", "algorithm", "complexity"]
      min_complexity: 7
    
    security:
      agent: eval-safety-infra-gatekeeper
      prompt_template: review-security.md
      trigger_keywords: ["auth", "security", "encryption", "vulnerability", "injection"]
      min_complexity: 5
    
    architecture:
      agent: chief-scientist-deepmind
      prompt_template: review-architecture.md
      trigger_keywords: ["architecture", "design", "pattern", "structure", "system"]
      min_complexity: 7
    
    performance:
      agent: performance-engineer
      prompt_template: review-performance.md
      trigger_keywords: ["performance", "latency", "throughput", "optimization", "benchmark"]
      min_complexity: 6
    
    distributed:
      agent: system-architect
      prompt_template: review-distributed.md
      trigger_keywords: ["distributed", "consensus", "replication", "partition", "consistency"]
      min_complexity: 8
    
    storage:
      agent: backend-architect
      prompt_template: review-storage.md
      trigger_keywords: ["database", "storage", "persistence", "rocksdb", "pebble", "wal"]
      min_complexity: 7

# Round-specific configuration
debate_rounds:
  round_1:
    name: "Initial Review"
    timeout_hours: 24
    required_evidence:
      - test_coverage
      - benchmarks
      - architecture_diagram
    success_criteria:
      - no_critical_issues
      - questions_answered
  
  round_2:
    name: "Evidence-Based Response"
    timeout_hours: 48
    required_evidence:
      - detailed_benchmarks
      - alternative_analysis
      - risk_assessment
    success_criteria:
      - concerns_addressed
      - evidence_provided
      - consensus_trending
  
  round_3:
    name: "Synthesis & Resolution"
    timeout_hours: 72
    required_evidence:
      - action_items
      - architectural_decision_record
      - follow_up_tasks
    success_criteria:
      - consensus_reached
      - decisions_documented
      - improvements_planned
  
  round_4:
    name: "Escalation"
    timeout_hours: 96
    required_evidence:
      - human_review
      - sync_meeting_notes
      - executive_summary
    success_criteria:
      - final_decision
      - risk_accepted
      - path_forward

# Metrics to collect during debates
debate_metrics:
  quality_metrics:
    - lines_reviewed
    - issues_found
    - suggestions_made
    - evidence_provided
  
  efficiency_metrics:
    - time_to_consensus
    - rounds_required
    - human_interventions
    - action_items_generated
  
  outcome_metrics:
    - bugs_prevented
    - performance_improvements
    - architecture_refinements
    - knowledge_captured

# Templates for different complexity levels
review_templates:
  critical:
    focus:
      - correctness_proof
      - performance_analysis
      - security_audit
      - failure_modes
    depth: line_by_line
    evidence_required: comprehensive
  
  high:
    focus:
      - architecture_compliance
      - trade_off_analysis
      - testing_coverage
    depth: component_level
    evidence_required: substantial
  
  medium:
    focus:
      - best_practices
      - code_quality
      - documentation
    depth: function_level
    evidence_required: standard
  
  low:
    focus:
      - syntax
      - conventions
      - basic_testing
    depth: file_level
    evidence_required: minimal

# Example task configurations
task_examples:
  task_12_5:  # L2 Persistent Store
    complexity: 8
    expected_rounds: 2-3
    specialized_agents:
      - storage
      - performance
    critical_aspects:
      - crash_recovery
      - write_ahead_log
      - batch_atomicity
      - performance_targets
  
  task_10_1:  # DSL Schema Design
    complexity: 9
    expected_rounds: 3-4
    specialized_agents:
      - architecture
      - algorithm
    critical_aspects:
      - language_design
      - parser_correctness
      - semantic_validation
      - extensibility
  
  task_14:  # MCTS Engine
    complexity: 10
    expected_rounds: 3-4
    specialized_agents:
      - algorithm
      - performance
      - architecture
    critical_aspects:
      - search_efficiency
      - reward_function
      - parallel_exploration
      - state_management