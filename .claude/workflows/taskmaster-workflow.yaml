# TaskMaster Workflow Configuration for Oppie Thunder
# This file defines the workflow structure for TaskMaster integration

workflow:
  name: "Oppie Thunder MCTS/LATS Implementation"
  description: "Multi-agent orchestration for AI engineering partner"
  version: "1.0.0"
  
phases:
  - id: phase_1_research
    name: "Research & Architecture Foundation"
    lead_agent: chief-scientist-deepmind
    duration: "2 weeks"
    tasks:
      - id: research_synthesis
        title: "LATS/MCTS Research Synthesis"
        agent: chief-scientist-deepmind
        priority: high
        outputs:
          - research-synthesis.md
          - feasibility-analysis.md
      
      - id: architecture_review
        title: "MCTS Architecture Review"
        agent: alphazero-muzero-planner
        priority: high
        depends_on: [research_synthesis]
        outputs:
          - architecture-spec.md
          - performance-analysis.md
    
    success_criteria:
      - "Theoretical proof of <5s iteration"
      - "Complete architecture specification"
      - "Risk assessment documented"
  
  - id: phase_2_engine
    name: "Core Engine Implementation"
    lead_agent: alphazero-muzero-planner
    duration: "4 weeks"
    parallel: true
    tasks:
      - id: lats_engine
        title: "LATS Engine Implementation"
        agent: alphazero-muzero-planner
        priority: high
        parallel: true
        outputs:
          - helios-engine/pkg/helios/lats/
      
      - id: state_management
        title: "State Management System"
        agent: alphazero-muzero-planner
        priority: high
        parallel: true
        outputs:
          - helios-engine/pkg/helios/l2store/
      
      - id: v8_sandbox
        title: "V8 Isolate Sandbox"
        agent: eval-safety-infra-gatekeeper
        priority: high
        parallel: true
        outputs:
          - sandbox/v8-isolates/
    
    success_criteria:
      - "LATS engine operational"
      - "15-second iteration achieved"
      - "State management <1ms latency"
  
  - id: phase_3_evolution
    name: "Evolutionary Optimization"
    lead_agent: alphaevolve-scientist
    duration: "3 weeks"
    tasks:
      - id: trajectory_buffer
        title: "Trajectory Replay Buffer"
        agent: alphaevolve-scientist
        priority: high
        outputs:
          - evolution/trajectory-buffer/
      
      - id: dpo_training
        title: "DPO Reward Training"
        agent: alphaevolve-scientist
        priority: high
        depends_on: [trajectory_buffer]
        outputs:
          - evolution/reward-function/
      
      - id: population_training
        title: "Population-Based Training"
        agent: alphaevolve-scientist
        priority: normal
        depends_on: [dpo_training]
        outputs:
          - evolution/population-config.yaml
    
    success_criteria:
      - "1000+ episodes collected"
      - "Measurable performance improvement"
      - "Reward function stability"
  
  - id: phase_4_safety
    name: "Safety & Infrastructure"
    lead_agent: eval-safety-infra-gatekeeper
    duration: "2 weeks"
    tasks:
      - id: safety_mechanisms
        title: "Safety Mechanisms Implementation"
        agent: eval-safety-infra-gatekeeper
        priority: critical
        outputs:
          - safety/validation-gates/
          - safety/risk-assessment/
      
      - id: deployment_infra
        title: "Deployment Infrastructure"
        agent: eval-safety-infra-gatekeeper
        priority: high
        depends_on: [safety_mechanisms]
        outputs:
          - infrastructure/terraform/
          - infrastructure/monitoring/
    
    success_criteria:
      - "Security audit passed"
      - "99.9% uptime achieved"
      - "Rollback tested"
  
  - id: phase_5_advanced
    name: "Advanced Capabilities"
    lead_agent: alphafold2-structural-scientist
    duration: "3 weeks"
    tasks:
      - id: code_analysis
        title: "Code Structure Analysis"
        agent: alphafold2-structural-scientist
        priority: normal
        outputs:
          - analysis/patterns/
          - analysis/anti-patterns/
      
      - id: structure_planning
        title: "Structure-Aware Planning"
        agent: alphafold2-structural-scientist
        priority: normal
        depends_on: [code_analysis]
        outputs:
          - planning/structure-aware/
    
    success_criteria:
      - "30% code change reduction"
      - "Pattern library established"
      - "Full system integration"

agents:
  chief-scientist-deepmind:
    description: "Research and theoretical foundation"
    capabilities:
      - "Literature synthesis"
      - "Architecture design"
      - "Mathematical validation"
  
  alphazero-muzero-planner:
    description: "MCTS/LATS implementation"
    capabilities:
      - "Tree search algorithms"
      - "Planning systems"
      - "Performance optimization"
  
  alphaevolve-scientist:
    description: "Evolutionary optimization"
    capabilities:
      - "Population-based training"
      - "Reward function design"
      - "Learning systems"
  
  eval-safety-infra-gatekeeper:
    description: "Safety and infrastructure"
    capabilities:
      - "Security validation"
      - "Infrastructure setup"
      - "Deployment systems"
  
  alphafold2-structural-scientist:
    description: "Code structure analysis"
    capabilities:
      - "AST analysis"
      - "Pattern recognition"
      - "Structural optimization"

metrics:
  performance:
    mcts_iteration_time:
      target: "<5s"
      measurement: "percentile_95"
    
    state_latency:
      L0:
        target: "<100μs"
        measurement: "average"
      L1:
        target: "<1ms"
        measurement: "average"
      L2:
        target: "<5ms"
        measurement: "average"
  
  quality:
    test_coverage:
      target: "≥85%"
      measurement: "percentage"
    
    security_score:
      target: "A+"
      measurement: "grade"
    
    code_review_time:
      target: "-50%"
      measurement: "reduction_percentage"
  
  learning:
    episodes_collected:
      target: ">1000"
      measurement: "count"
    
    improvement_rate:
      target: ">5%"
      measurement: "per_100_episodes"